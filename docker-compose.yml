version: "3.9"

volumes:
  kong_data:

networks:
  kong-net:
    external: true

services:
  kong-database:
    image: ${POSTGRESQL_DOCKER_TAG:-postgres:9.6.11-alpine}
    container_name: ${DATABASE_CONTAINER_NAME:-kong-database}
    environment:
      POSTGRES_DB: ${KONG_SB_DATABASE:-kong}
      POSTGRES_USER: ${KONG_SB_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_SB_PASSWORD:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_DB_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migration:
    image: ${KONG_DOCKER_TAG:-kong:2.4.1-alpine}
    container_name: ${MIGRATION_CONTAINER_NAME:-kong-migration}
    entrypoint: sh -c "sleep 10 && kong migrations bootstrap -v" 
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-postgres}
      KONG_PG_HOST: ${KONG_DB_HOST:-kong-database}
      KONG_PG_DATABASE: ${KONG_DB_DATABASE:-kong}
      KONG_PG_USER: ${KONG_DB_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong}
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
       - kong-net
    restart: on-failure

  kong:
    image: ${KONG_DOCKER_TAG:-kong:latest}
    container_name: ${KONG_CONTAINER_NAME:-kong}
    environment:
      KONG_DATABASE: ${DATABASE:-postgres}
      KONG_PG_HOST: ${KONG_DB_HOST:-kong-database}
      KONG_PG_DATABASE: ${KONG_DB_DATABASE:-kong}
      KONG_PG_USER: ${KONG_DB_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
      KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
      KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
      KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
    ports:
      - $KONG_PROXY_PORT:8000
      - $KONG_PROXY_ADMIN_API_PORT:8001
      - $KONG_PROXY_SSL_PORT:8443
      - $KONG_PROXY_ADMIN_SSL_API_PORT:8444
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
       - kong-net
    restart: on-failure

  konga:
    image: ${KONGA_DOCKER_TAG:-pantsel/konga:latest}
    container_name: ${KONGA_CONTAINER_NAME:-konga}
    environment:
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      DB_ADAPTER: ${DATABASE:-postgres}
      DB_HOST: ${KONG_DB_HOST:-kong-database}
      DB_PORT: ${KONG_DB_PORT:-5432}
      DB_DATABASE: ${KONG_DB_DATABASE:-kong}
      DB_USER: ${KONG_DB_USER:-kong}
      DB_PASSWORD: ${KONG_DB_PASSWORD:-kong}
      KONGA_SEED_USER_DATA_SOURCE_FILE: ${USER_SEED:-/app/user_seed.js}
      NODE_ENV: ${KONGA_ENV:-development}
      KONGA_HOOK_TIMEOUT: 10000
    ports:
      - $KONGA_PORT:1337
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
       - kong-net
    restart: on-failure
    volumes:
      - ./konga/user_seed.js:/app/user_seed.js:ro